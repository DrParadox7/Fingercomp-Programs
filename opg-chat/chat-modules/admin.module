EvEng:subscribe("part", 1, function(evt)
  local time, chan, user = evt.time, evt.chan, evt.user
  local users = {}
  for k, _ in pairs(channels[chan].users) do
    table.insert(users, k)
  end
  if not users[1] and chan ~= cfg.main_channel then
    channels[chan] = nil -- ba-DOOOM
  end
end)

EvEng:subscribe("join", 1, function(evt)
  local time, chan, user = evt.time, evt.chan, evt.user
  if isin(cfg.admins, user) or cfg.server == user then
    setMode(chan, cfg.server, "+o", user)
  end
end)

command {
  name = "mode",
  level = NORMAL,
  help = "Sets channel's modes",
  func = function(evt, chan, user, raw, cmd, channel, mode, arg)
    if not mode then
      help(user, "mode")
      return -1
    end
    local success, reason = apcall(setMode, channel, user, mode, arg)
    if not success then
      sendPM(cfg.server, user, "Could not set mode: " .. (reason or "unknown reason"))
    end
  end
}

command {
  name = "stop",
  level = ADMIN,
  help = "Shut down the server",
  aliases = {"shutdown", "halt"},
  func = function(evt, chan, user, raw, cmd)
    EvEng:push(events.stop{time = os.time()})
  end
}

-- vim: expandtab tabstop=2 shiftwidth=2 syntax=lua filetype=lua :
